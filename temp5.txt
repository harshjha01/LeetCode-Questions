class Solution
{
public:
    bool iseven(int no)
    {
        if (no % 2 == 0)
        {
            return true;
        }
        return false;
    };
   
    bool isEvenOddTree(TreeNode *root)
    {
        queue<TreeNode *> q;
        q.push(root);
        q.push(NULL);
        int level = 0;
       
        int tempvar = INT_MIN;
        
        while (!q.empty())
        {
            TreeNode *temp = q.front();
            q.pop();
            if (temp != NULL)
            {

              
                if (iseven(level))
                {
                    if (tempvar >= temp->val)
                    {
                        return false;
                    }

                    if (iseven(temp->val))
                    {
                        return false;
                    }
                    tempvar = temp->val;
                }
                if (!iseven(level))
                {
                    if (tempvar <= temp->val)
                    {
                        return false;
                    }
                    if (!iseven(temp->val))
                    {
                        return false;
                    }
                    tempvar = temp->val;
                }
                  if (temp->left)
                {
                    q.push(temp->left);
                }
                if (temp->right)
                {
                    q.push(temp->right);
                }
            }
            else
            {
                q.push(NULL);
                level++;
                if (iseven(level))
                {
                    tempvar = INT_MIN;
                }
                if (!iseven(level))
                {
                    tempvar = INT_MAX;
                }
            }
        }
        return true;
    }
};